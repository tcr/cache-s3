version: 1.0.{build}
image: Visual Studio 2015

build: off

environment:
  global:
    # Avoid long paths on Windows
    STACK_ROOT: 'c:\s'
    STACK_WORK: '.w'
    WORK_DIR: 'c:\w'


before_test:
# Avoid long paths not to reach MAX_PATH of 260 chars
- xcopy /q /s /e /r /k /i /v /h /y "%APPVEYOR_BUILD_FOLDER%" "%WORK_DIR%"
- cd "%WORK_DIR%"

# Install stack
- mkdir %APPDATA%\local\bin\
- set PATH=%PATH%;%APPDATA%\local\bin
- ps: Start-FileDownload http://www.stackage.org/stack/windows-x86_64 -FileName stack.zip
- 7z x stack.zip stack.exe
- cp stack.exe %APPDATA%\local\bin\stack.exe

- ps: >-
    if (-not ("$env:CACHE_S3_VERSION" -eq "" )) {
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      Invoke-WebRequest https://github.com/fpco/cache-s3/releases/download/$env:CACHE_S3_VERSION/cache-s3-$env:CACHE_S3_VERSION-windows-x86_64.zip -OutFile cache-s3.zip
      Expand-Archive cache-s3.zip -Destination .
      .\cache-s3 --prefix=$env:APPVEYOR_REPO_NAME --git-branch=$env:APPVEYOR_REPO_BRANCH --suffix=windows restore stack --base-branch=master
      .\cache-s3 --prefix=$env:APPVEYOR_REPO_NAME --git-branch=$env:APPVEYOR_REPO_BRANCH --suffix=windows restore stack work --base-branch=master
    }


test_script:
- cd "%WORK_DIR%"
- stack setup --no-reinstall > nul
- stack install -j 2 --no-terminal --test


after_test:
# Upload an executable to the release for every git tag
- ps: >-
    if ($env:APPVEYOR_REPO_TAG_NAME) {
      Start-FileDownload https://github.com/tfausak/github-release/releases/download/$env:GITHUB_RELEASE_VERSION/github-release-windows.zip -FileName github-release.zip
      7z x github-release.zip github-release.exe
      cp $env:APPDATA\local\bin\cache-s3.exe cache-s3.exe
      7z a cache-s3.zip cache-s3.exe
      .\github-release upload --token=$env:GITHUB_TOKEN --repo=$env:APPVEYOR_REPO_NAME --file=cache-s3.zip --tag=$env:APPVEYOR_REPO_TAG_NAME --name=cache-s3-$env:APPVEYOR_REPO_TAG_NAME-windows-x86_64.zip
    }
